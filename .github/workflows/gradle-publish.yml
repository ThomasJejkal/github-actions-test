name: Build and Test

on:
  pull_request:

jobs:
  build_and_test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        #[ubuntu-latest, macOS-latest, windows-latest]
        java-version: [11]
    steps:
      - uses: actions/checkout@v2
      - uses: joschi/setup-jdk@v2
        with:
          java-version: ${{ matrix.java-version }}
          architecture: 'x64'

      - name: Build and Test
        run:   |
         if [ "$RUNNER_OS" == "Linux" ]; then
              chmod +x gradlew
              ./gradlew build
         elif [ "$RUNNER_OS" == "macOS" ]; then
              chmod +x gradlew
              ./gradlew build 
         elif [ "$RUNNER_OS" == "Windows" ]; then
              ./gradlew.bat build
         else
              echo "$RUNNER_OS not supported"
              exit 1
         fi
        shell: bash

name: Code Coverage

on:
   merge:
      branches: [main, dev]
      
jobs:
  code_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: joschi/setup-jdk@v2
        with:
          java-version: 11
          architecture: 'x64'

      - name: Code Coverage
        run:|
            chmod +x gradlew
            ./gradlew jacocoTestReport
        shell: bash
        uses: coverallsapp/github-action@v1.1.2
        with:
        github-token: ${{ github.token }}

#  calculate-version:
#    name: Calculate Version
#    runs-on: ubuntu-latest
#    outputs:
#      semVer: ${{ steps.gitversion.outputs.semVer }}
#    steps:
#      # gitversion/execute step omitted for brevity
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Install GitVersion
#        uses: gittools/actions/gitversion/setup@v0.9.7
#        with:
#            versionSpec: '5.5.0'
#      - name: Determine Version
#        id: gitversion
#        uses: gittools/actions/gitversion/execute@v0.9.7

#  display-semver:
#    name: Display Semantic Version
#    runs-on: ubuntu-latest
#    needs: build_and_test
#    env:
#      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
#    steps:
#      - name: Display version
#        run: |
#          echo SemVer: $SEMVER

#            versionSpec: '5.5.0'
#      - name: Fetch
#        run: |
#          git fetch --unshallow
#      - name: Determine Version
#        id: gitversion
#        uses: gittools/actions/gitversion/execute@v0.9.7
      
