name: Build and Test

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main
  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: collection-api

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build_and_test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, macOS-latest, windows-latest]
        java-version: [11]
    steps:
      - uses: actions/checkout@v2
      - uses: joschi/setup-jdk@v2
        with:
          java-version: ${{ matrix.java-version }} # The OpenJDK version to make available on the path
          architecture: 'x64' # defaults to 'x64'

      - name: Build and Test
        run:   |
         if [ "$RUNNER_OS" == "Linux" ]; then
              ./gradlew build
         elif [ "$RUNNER_OS" == "macOS" ]; then
              ./gradlew build 
         elif [ "$RUNNER_OS" == "Windows" ]; then
              ./gradlew.bat build
         else
              echo "$RUNNER_OS not supported"
              exit 1
         fi
        shell: bash
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      # gitversion/execute step omitted for brevity

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

  display-semver:
    name: Display Semantic Version
    runs-on: ubuntu-latest
    needs: build_and_test
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
    steps:
      - name: Display version
        run: |
          echo SemVer: $SEMVER

      
